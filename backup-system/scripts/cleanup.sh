#!/bin/bash

# ===========================================
# –°–ö–†–ò–ü–¢ –û–ß–ò–°–¢–ö–ò –°–¢–ê–†–´–• –ë–ï–ö–ê–ü–û–í
# ===========================================

set -euo pipefail

# –ó–∞–≥—Ä—É–∑–∫–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫
source /app/scripts/lib/logger.sh
source /app/scripts/lib/config.sh
source /app/scripts/lib/telegram.sh

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
init_logger
load_config

log_info "üßπ –ó–∞–ø—É—Å–∫ –æ—á–∏—Å—Ç–∫–∏ —Å—Ç–∞—Ä—ã—Ö –±–µ–∫–∞–ø–æ–≤ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞: $PROJECT_NAME"

# –û—á–∏—Å—Ç–∫–∞ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –±–µ–∫–∞–ø–æ–≤
cleanup_local_backups() {
    log_step "–û—á–∏—Å—Ç–∫–∞ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –±–µ–∫–∞–ø–æ–≤..."
    
    local retention_days="${RETENTION_DAYS:-30}"
    local backup_dir="/backup/archives"
    local removed_count=0
    local removed_size=0
    
    if [ ! -d "$backup_dir" ]; then
        log_warn "‚ö†Ô∏è  –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –±–µ–∫–∞–ø–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: $backup_dir"
        return 0
    fi
    
    if [ "${DRY_RUN:-false}" = "true" ]; then
        log_info "üîç [DRY-RUN] –ü–æ–∏—Å–∫ —Ñ–∞–π–ª–æ–≤ —Å—Ç–∞—Ä—à–µ $retention_days –¥–Ω–µ–π –≤ $backup_dir"
        
        find "$backup_dir" -name "${PROJECT_NAME}_*" -type f -mtime +$retention_days -print0 2>/dev/null | while IFS= read -r -d '' file; do
            local file_size=$(stat -f%z "$file" 2>/dev/null || stat -c%s "$file" 2>/dev/null || echo "0")
            local file_size_mb=$((file_size / 1024 / 1024))
            log_info "üîç [DRY-RUN] –ë—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω: $(basename "$file") (${file_size_mb} MB)"
            removed_count=$((removed_count + 1))
            removed_size=$((removed_size + file_size))
        done
    else
        # –†–µ–∞–ª—å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
        find "$backup_dir" -name "${PROJECT_NAME}_*" -type f -mtime +$retention_days -print0 2>/dev/null | while IFS= read -r -d '' file; do
            local file_size=$(stat -f%z "$file" 2>/dev/null || stat -c%s "$file" 2>/dev/null || echo "0")
            local filename=$(basename "$file")
            
            if rm -f "$file"; then
                removed_count=$((removed_count + 1))
                removed_size=$((removed_size + file_size))
                log_debug "üóëÔ∏è  –£–¥–∞–ª–µ–Ω: $filename"
            else
                log_error "‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞: $filename"
            fi
        done
    fi
    
    local removed_size_mb=$((removed_size / 1024 / 1024))
    
    if [ $removed_count -gt 0 ]; then
        log_success "–õ–æ–∫–∞–ª—å–Ω–æ —É–¥–∞–ª–µ–Ω–æ $removed_count —Ñ–∞–π–ª–æ–≤ (${removed_size_mb} MB)"
    else
        log_info "–õ–æ–∫–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
    fi
    
    echo "$removed_count $removed_size"
}

# –û—á–∏—Å—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö –±–µ–∫–∞–ø–æ–≤
cleanup_remote_backups() {
    if [ "${REMOTE_ENABLED:-false}" != "true" ]; then
        log_debug "üåê –û—á–∏—Å—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö –±–µ–∫–∞–ø–æ–≤ –æ—Ç–∫–ª—é—á–µ–Ω–∞"
        return 0
    fi
    
    log_step "–û—á–∏—Å—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö –±–µ–∫–∞–ø–æ–≤..."
    
    local retention_days="${RETENTION_DAYS:-30}"
    local ssh_opts="-o ConnectTimeout=30 -o BatchMode=yes -o StrictHostKeyChecking=no"
    local remote_removed_count=0
    local remote_removed_size=0
    
    if [ -n "${REMOTE_SSH_KEY:-}" ]; then
        ssh_opts="$ssh_opts -i $REMOTE_SSH_KEY"
    fi
    
    local remote_project_dir="$REMOTE_PATH/$PROJECT_NAME"
    
    if [ "${DRY_RUN:-false}" = "true" ]; then
        log_info "üîç [DRY-RUN] –û—á–∏—Å—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö –±–µ–∫–∞–ø–æ–≤ —Å—Ç–∞—Ä—à–µ $retention_days –¥–Ω–µ–π"
        log_info "üîç [DRY-RUN] –ü—É—Ç—å: ${REMOTE_USER}@${REMOTE_HOST}:$remote_project_dir"
    else
        # –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –æ—á–∏—Å—Ç–∫–∏ –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ
        local cleanup_script="
            #!/bin/bash
            removed_count=0
            removed_size=0
            
            if [ -d '$remote_project_dir' ]; then
                find '$remote_project_dir' -name '${PROJECT_NAME}_*' -type f -mtime +$retention_days -print0 2>/dev/null | while IFS= read -r -d '' file; do
                    file_size=\$(stat -c%s \"\$file\" 2>/dev/null || echo \"0\")
                    if rm -f \"\$file\"; then
                        removed_count=\$((removed_count + 1))
                        removed_size=\$((removed_size + file_size))
                        echo \"–£–¥–∞–ª–µ–Ω: \$(basename \"\$file\")\"
                    fi
                done
                
                # –£–¥–∞–ª–µ–Ω–∏–µ –ø—É—Å—Ç—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
                find '$remote_project_dir' -type d -empty -delete 2>/dev/null || true
            fi
            
            echo \"CLEANUP_STATS: \$removed_count \$removed_size\"
        "
        
        # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ
        local output
        output=$(ssh $ssh_opts -p "${REMOTE_PORT:-22}" "${REMOTE_USER}@${REMOTE_HOST}" "$cleanup_script" 2>/dev/null || echo "ERROR")
        
        if [ "$output" != "ERROR" ]; then
            # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
            local stats_line=$(echo "$output" | grep "CLEANUP_STATS:" | tail -1)
            if [ -n "$stats_line" ]; then
                remote_removed_count=$(echo "$stats_line" | cut -d' ' -f2)
                remote_removed_size=$(echo "$stats_line" | cut -d' ' -f3)
            fi
            
            local remote_removed_size_mb=$((remote_removed_size / 1024 / 1024))
            
            if [ "$remote_removed_count" -gt 0 ]; then
                log_success "–£–¥–∞–ª–µ–Ω–Ω–æ —É–¥–∞–ª–µ–Ω–æ $remote_removed_count —Ñ–∞–π–ª–æ–≤ (${remote_removed_size_mb} MB)"
            else
                log_info "–£–¥–∞–ª–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
            fi
        else
            log_error "‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ—á–∏—Å—Ç–∫–∏ –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ"
        fi
    fi
    
    echo "$remote_removed_count $remote_removed_size"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    log_info "üßπ –ù–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã –æ—á–∏—Å—Ç–∫–∏ —Å—Ç–∞—Ä—ã—Ö –±–µ–∫–∞–ø–æ–≤"
    
    if [ "${DRY_RUN:-false}" = "true" ]; then
        log_info "üîç –†–µ–∂–∏–º DRY-RUN –∞–∫—Ç–∏–≤–µ–Ω - —Ñ–∞–π–ª—ã –Ω–µ –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã"
    fi
    
    # –ü–æ–∫–∞–∑–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–æ—Ç–∞—Ü–∏–∏
    log_info "üìã –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–æ—Ç–∞—Ü–∏–∏:"
    log_info "   üìÖ –•—Ä–∞–Ω–∏—Ç—å –¥–Ω–µ–π: ${RETENTION_DAYS:-30}"
    log_info "   üìÅ –õ–æ–∫–∞–ª—å–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: /backup/archives"
    if [ "${REMOTE_ENABLED:-false}" = "true" ]; then
        log_info "   üåê –£–¥–∞–ª–µ–Ω–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: ${REMOTE_USER}@${REMOTE_HOST}:${REMOTE_PATH}/${PROJECT_NAME}"
    fi
    
    echo
    
    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ—á–∏—Å—Ç–∫–∏
    local start_time=$(date +%s)
    
    # –û—á–∏—Å—Ç–∫–∞ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –±–µ–∫–∞–ø–æ–≤
    local local_stats
    local_stats=$(cleanup_local_backups)
    local local_removed_count=$(echo "$local_stats" | cut -d' ' -f1)
    local local_removed_size=$(echo "$local_stats" | cut -d' ' -f2)
    
    echo
    
    # –û—á–∏—Å—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö –±–µ–∫–∞–ø–æ–≤
    local remote_stats
    remote_stats=$(cleanup_remote_backups)
    local remote_removed_count=$(echo "$remote_stats" | cut -d' ' -f1)
    local remote_removed_size=$(echo "$remote_stats" | cut -d' ' -f2)
    
    # –ü–æ–¥—Å—á–µ—Ç –∏—Ç–æ–≥–æ–≤
    local end_time=$(date +%s)
    local duration=$((end_time - start_time))
    local total_removed=$((local_removed_count + remote_removed_count))
    local total_size=$((local_removed_size + remote_removed_size))
    local total_size_mb=$((total_size / 1024 / 1024))
    
    echo
    log_info "üìä –ò—Ç–æ–≥–∏ –æ—á–∏—Å—Ç–∫–∏:"
    log_info "   üóëÔ∏è  –í—Å–µ–≥–æ —É–¥–∞–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: $total_removed"
    log_info "   üíæ –í—Å–µ–≥–æ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–æ –º–µ—Å—Ç–∞: ${total_size_mb} MB"
    log_info "   üìç –õ–æ–∫–∞–ª—å–Ω–æ: $local_removed_count —Ñ–∞–π–ª–æ–≤"
    log_info "   üåê –£–¥–∞–ª–µ–Ω–Ω–æ: $remote_removed_count —Ñ–∞–π–ª–æ–≤"
    log_info "   ‚è±Ô∏è  –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ${duration}—Å"
    
    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram
    if [ $total_removed -gt 0 ]; then
        notify_cleanup "$PROJECT_NAME" "$total_removed" "${total_size_mb} MB"
        log_success "–û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
    else
        log_info "–§–∞–π–ª–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
    fi
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@"
