networks:
  onedev-net:
    driver: bridge

volumes:
  onedev-data:
    driver: local
  onedev-db-data:
    driver: local
  nginx-logs:
    driver: local

services:
  onedev-db:
    image: postgres:16
    container_name: onedev-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${ONEDEV_DB_NAME}
      POSTGRES_USER: ${ONEDEV_DB_USER}
      POSTGRES_PASSWORD: ${ONEDEV_DB_PASSWORD}
    volumes:
      - onedev-db-data:/var/lib/postgresql/data
    networks:
      - onedev-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${ONEDEV_DB_USER} -d ${ONEDEV_DB_NAME}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    security_opt:
      - no-new-privileges:true
    env_file:
      - .env

  onedev-server:
    image: 1dev/server:${ONEDEV_VERSION:-latest}
    container_name: onedev-server
    restart: unless-stopped
    depends_on:
      onedev-db:
        condition: service_healthy
    environment:
      hibernate_dialect: io.onedev.server.persistence.PostgreSQLDialect
      hibernate_connection_driver_class: org.postgresql.Driver
      hibernate_connection_url: jdbc:postgresql://onedev-db:5432/${ONEDEV_DB_NAME}
      hibernate_connection_username: ${ONEDEV_DB_USER}
      hibernate_connection_password: ${ONEDEV_DB_PASSWORD}
      initial_server_url: ${ONEDEV_ROOT_URL}
      server_url: ${ONEDEV_ROOT_URL}
    volumes:
      - onedev-data:/opt/onedev
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "${ONEDEV_HTTP_PORT}:6610"
      - "${ONEDEV_SSH_PORT}:6611"
    networks:
      - onedev-net
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:6610 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    env_file:
      - .env

  nginx:
    image: nginx:1.25-alpine
    container_name: onedev-nginx
    restart: unless-stopped
    depends_on:
      onedev-server:
        condition: service_healthy
    ports:
      - "${NGINX_HTTP_PORT}:80"
      - "${NGINX_HTTPS_PORT}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - nginx-logs:/var/log/nginx
    networks:
      - onedev-net
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s
    security_opt:
      - no-new-privileges:true
    env_file:
      - .env

  onedev-agent:
    image: 1dev/agent:${ONEDEV_VERSION:-latest}
    container_name: onedev-agent
    restart: unless-stopped
    depends_on:
      onedev-server:
        condition: service_healthy
    environment:
      serverUrl: http://onedev-server:6610
      agentToken: ${ONEDEV_AGENT_TOKEN}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - onedev-net
    profiles:
      - agent
    env_file:
      - .env